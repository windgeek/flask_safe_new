#自动根据cpu核数分配worker数
worker_processes auto;
#增大单个worker进程的文件句柄数限制
worker_rlimit_nofile 102400;

user root;
events {
    #不能大于worker_rlimit_nofile
    worker_connections  102400;
    #使用epoll模型
    use epoll;
    multi_accept on;
}
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;



http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;
    log_format  dm  '$time_local|$remote_addr|$upstream_addr|$request|$upstream_response_time|$body_bytes_sent|$status';
    #access_log  logs/access.log  dm;
    error_log   /data/nginx/logs/error.log warn;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    #keepalive_timeout  65;
    keepalive_timeout  60m;
    keepalive_requests 10000;
    types_hash_max_size 2048;


    server {
        listen       80;
        server_name  localhost;

        location / {
            try_files $uri $uri/ /index.html;
            #root   html;
            root  /data/web/dist;
            index  index.html index.htm;
        }


        location /v1 {
            rewrite   /v1/(.*) /$1 break;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
	    proxy_connect_timeout 60m;
	    proxy_read_timeout 60m;
	    proxy_send_timeout 60m;
            proxy_pass  http://172.28.9.180:23333;
        }
        location /api {
            rewrite   /api/(.*) /$1 break;
            # HTTP 1.0需要使用keep-alive参数来告知服务器端要建立一个长连接，而HTTP1.1默认支持长连接。http2.0特性 多路复用（一个连接并发处理多个请求）header数据压缩hpack算法
            proxy_http_version 1.1;
            # 如果没加，后端服务器会收到 Connection: close 的 Header，而不能复用连接； 清空connection的请求头，避免客户端传递短链接的请求头信息。
            proxy_set_header Connection "";
	        proxy_connect_timeout 60m;
	        proxy_read_timeout 60m;
	        proxy_send_timeout 60m;
            proxy_pass  http://sonar.iyou.com;
        }


    }


#    server {
#        listen       443 ssl;
#        #server_name  dp.iyou.com;
#        server_name  localhost;
#        #server_name  10.236.83.196;
#        #ssl_certificate      /usr/local/nginx/conf/ssl/certificate.pem;
#        ssl_certificate      /etc/nginx/ssl/iyou.com.pem;
#        #ssl_certificate_key  /usr/local/nginx/conf/ssl/certificate.key;
#        ssl_certificate_key  /etc/nginx/ssl/iyou.com.key;
#        ssl_session_timeout  5m;
#        ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
#        ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
#        #ssl_ciphers  HIGH:!aNULL:!MD5;
#        ssl_prefer_server_ciphers   on;
#        location / {
#            #proxy_pass http://10.236.83.196;
#            proxy_pass http://localhost;
#            #proxy_pass http://dp.iyou.com;
#            proxy_set_header X-Forwarded-For $remote_addr;
#            proxy_set_header Host $http_host;
#        }
#
#    }


}
